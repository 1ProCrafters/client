import net.fabricmc.loom.LoomGradleExtension

plugins {
	id "java"
	id "java-library"
	id "org.quiltmc.loom" version "1.0.+" apply false
	id "io.freefair.lombok" version "6.4.3"
}

configurations {
	mixin
	api.extendsFrom mixin
}

dependencies {
	// minimal lwjgl, simply to compile against since the version can vary
	compileOnly "org.lwjgl:lwjgl-opengl:3.3.1"

	api files(rootProject.projectDir.getPath() + "/libs/occlusionculling.jar")

	api "net.hypixel:hypixel-api-core:4.0"
	api "com.github.JnCrMx:discord-game-sdk4j:v0.5.4"
	api "org.java-websocket:Java-WebSocket:1.5.3"
	api "org.apache.httpcomponents:httpclient:4.5.13"

	mixin "org.spongepowered:mixin:0.8.5"
	api "org.ow2.asm:asm-tree:${project.asmVersion}"
	api "org.ow2.asm:asm-commons:${project.asmVersion}"
	api "org.ow2.asm:asm-util:${project.asmVersion}"

	implementation "org.apache.logging.log4j:log4j-api:${project.log4jVersion}"
	implementation "org.apache.logging.log4j:log4j-core:${project.log4jVersion}"
	api "com.google.guava:guava:31.1-jre"

	api "commons-io:commons-io:2.11.0"
	api "org.apache.commons:commons-lang3:3.12.0"
	
	api "org.jetbrains:annotations:23.0.0"
}

allprojects {
	repositories {
		mavenCentral()
		maven { url "https://libraries.minecraft.net" }
		maven { url "https://repo.spongepowered.org/maven" }
		maven { url "https://repo.hypixel.net/repository/Hypixel" }
		maven { url "https://jitpack.io" }
		maven { url "https://maven.legacyfabric.net" }
		maven { url "https://maven.glass-launcher.net/babric" }
	}
}

subprojects {
	def versionProject = name != "bundle"

	apply plugin: "java"
	apply plugin: "java-library"

	if(versionProject) {
		apply plugin: "io.freefair.lombok"
		apply plugin: "org.quiltmc.loom"
	}
	
	dependencies {
		implementation project(":")

		if(versionProject) {
			annotationProcessor "org.ow2.asm:asm:${project.asmVersion}"
			annotationProcessor "org.ow2.asm:asm-analysis:${project.asmVersion}"
			annotationProcessor "org.ow2.asm:asm-commons:${project.asmVersion}"
			annotationProcessor "org.ow2.asm:asm-tree:${project.asmVersion}"
			annotationProcessor "org.ow2.asm:asm-util:${project.asmVersion}"
		}
	}

	if(versionProject) {
		def configs = LoomGradleExtension.get(project).getRunConfigs()
		configs.removeIf((config) -> config.environment != "client")

		for(def config in configs) {
			config.vmArgs.add "-Dio.github.solclient.client.mc_version=" + project.name
			config.vmArgs.add "-Dio.github.solclient.client.version=dev"
			config.vmArgs.add "-Dio.github.solclient.client.project_root=" + rootProject.projectDir.getAbsolutePath()
			config.vmArgs.add "-javaagent:" + rootProject.configurations.mixin[0]
			config.programArgs.add "--accessToken"
			config.programArgs.add "0"
			config.programArgs.add "--version"
			config.programArgs.add project.name
			config.defaultMainClass "io.github.solclient.client.wrapper.BootstrapMain"
			config.ideConfigGenerated true
		}

		loom {
			mixin {
				useLegacyMixinAp = false
			}
		}
	}
}
